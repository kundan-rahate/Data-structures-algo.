//  PROBLEM 09 - REMOVE NTH NODE FROM END OF LIST
//APPROACH 01 - BRUTE FORCE 
ALGORITHM
STEP 01 - WE HAVE TO FIND THE LENGTH OF LIST 
STEP 02 - DECLARE TWO NODE 
  A) TEMP - IT STOPS AT THE NODE WHICH WE WANT TO DELETE
  B) PREV - ITS POINT ON THE PREVIOUS NODE OF TEMP NODE
STEP 03 - WE HAVE TO POINT THE TEMP-> NEXT TO THE PREVIOUS NEXT NODE
STEP 04 - AFTER POINTING WE HAVE TO FREE UP OR DELETE TEMP NODE
STEP 05 - RETURN HEAD END;
class Solution {
public:
    int getLength(ListNode* head){
        int length =0;
        while(head != NULL){
            length++;
            head = head -> next;
        }
        return length;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int length = getLength(head);
        while(head != NULL){
            length++;
            head = head -> next;
        }
        if(length == n){
            ListNode* temp = head->next;
            delete(head);
            return temp;
        }
        ListNode* temp = head;
        ListNode* prev = NULL;
        int travel = length - n;
        while(travel--){
            prev = temp;
            temp = temp->next;
        }
        
        prev->next = temp -> next;
        delete(temp);
        return head;
    }
};
