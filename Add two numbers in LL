// PROBLEM NO. 02 - ADD TWO NUMBERS IN (LINKED LIST)
ALGORITHM 
  STEP 01 - INTIALLY WE CREATE DUMMY NODE WITH (-1) AND ONE TEMP NODE WHICH POINTS TO DUMMY NODE
  STEP 02 - DECLARE CARRY AS 0 AND EVERY TIME SUM SHOULD BE 0 
  STEP 03 - ADD THE NUMBERS OF BOTH THE INPUT NODES AND ALSO CARRY
  STEP 04 - THEN STORE CARRY OF SUM VARIABLE (SUM/10)
  STEP 05 - AND CREATE A NEWNODE WHERE IT STORES THE SUM%10
  STEP 06 - AND STORE IT TO THE TEMP->NEXT
  STEP 07 - RETURN DUMMY->NEXT;
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode(-1);
        ListNode* temp = dummy;
        int carry=0;
        while(l1 != NULL || l2 != NULL || carry != 0){
            int sum=0;
            if(l1 != NULL){
                sum += l1->val;
                l1 = l1->next;
            }
            if(l2!=NULL){
                sum += l2->val;
                l2 = l2->next;
            }
            sum += carry;
            carry = sum/10;
            ListNode* node = new ListNode(sum%10);
            temp -> next = node;
            temp = temp ->next; 
        }
        return dummy->next;
    }
};
